mantis {
  # Identifier used when connecting to other clients
  client-id = "mantis"

  # Version string (reported by an RPC method)
  client-version = "mantis/v0.1"

  # Base directory where all the data used by the node is stored, including blockchain data and private keys
  datadir = ${user.home}"/.mantis"

  # The unencrypted private key of this node
  node-key-file = ${mantis.datadir}"/nodeId.keys"

  # Keystore directory: stores encrypted private keys of accounts managed by this node
  keystore-dir = ${mantis.datadir}"/keystore"

  # timeout for shutting down the ActorSystem
  shutdown-timeout = "15.seconds"

  # one of the algorithms defined here:
  # https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html#SecureRandom
  # Uncomment this to specify, otherwise use the default implementation
  # secure-random-algo = "NativePRNG"

  network {
    # Ethereum protocol version
    protocol-version = 63

    server-address {
      # Listening interface for Ethereum protocol connections
      interface = "127.0.0.1"

      # Listening port for Ethereum protocol connections
      port = 9076
    }

    discovery {

      # Turn discovery of/off
      discovery-enabled = true

      # Listening interface for discovery protocol
      interface = "0.0.0.0"

      # Listening port for discovery protocol
      port = 30303

      # Set of initial nodes
      bootstrap-nodes = [
      ]

      # Maximum discovered nodes stored (TODO: remove me once full protocol is in place)
      nodes-limit = 1000

      # Initial delay for discovery scan
      scan-initial-delay = 10.seconds

      # Scan interval for discovery
      scan-interval = 1.minute

      # Discovery message expiration time
      message-expiration = 90.minutes

      # (TODO: remove me once full protocol is in place)
      scan-max-nodes = 10
    }

    known-nodes {
      # How often known nodes updates are persisted to disk
      persist-interval = 20.seconds

      # Maximum number of persisted nodes
      max-persisted-nodes = 200
    }

    peer {
      # Retry delay for failed attempt at connecting to a peer
      connect-retry-delay = 1 minute

      # Maximum number of reconnect attempts after the connection has been initiated.
      # After that, the connection will be dropped until its initiated again (eg. by peer discovery)
      connect-max-retries = 2

      disconnect-poison-pill-timeout = 5 seconds

      wait-for-hello-timeout = 3 seconds

      wait-for-status-timeout = 30 seconds

      wait-for-chain-check-timeout = 15 seconds

      wait-for-handshake-timeout = 3 seconds

      wait-for-tcp-ack-timeout = 5 seconds

      # Maximum block headers in a single response message (as a blockchain host)
      max-blocks-headers-per-message = 100

      # Maximum block bodies in a single response message (as a blockchain host)
      max-blocks-bodies-per-message = 100

      # Maximum transactions receipts in a single response message (as a blockchain host)
      max-receipts-per-message = 100

      # Maximum MPT components in a single response message (as a blockchain host)
      max-mpt-components-per-message = 200

      # Maximum number of peers this node can connect to
      max-outgoing-peers = 40

      # Maximum number of peers that can connect to this node
      max-incoming-peers = 5

      # Maximum number of peers that can be connecting to this node
      max-pending-peers = 5

      # Ethereum network identifier:
      # 1 - mainnet, 2 - morden
      network-id = 1

      # Initial delay before connecting to nodes
      update-nodes-initial-delay = 5.seconds

      # Newly discovered nodes connect attempt interval
      update-nodes-interval = 20.seconds
    }

    rpc {
      # JSON-RPC mode
      # Available modes are: http, https
      # Choosing https requires creating a certificate and setting up 'certificate-keystore-path' and
      # 'certificate-password-file'
      # See: https://github.com/input-output-hk/mantis/wiki/Creating-self-signed-certificate-for-using-JSON-RPC-with-HTTPS
      mode = "http"

      # Whether to enable JSON-RPC endpoint
      enabled = true

      # Listening address of JSON-RPC HTTP/HTTPS endpoint
      interface = "localhost"

      # Listening port of JSON-RPC HTTP/HTTPS endpoint
      port = 8546

      # Path to the keystore storing the certificates (used only for https)
      # null value indicates HTTPS is not being used
      certificate-keystore-path = null

      # Type of certificate keystore being used
      # null value indicates HTTPS is not being used
      certificate-keystore-type = null

      # File with the password used for accessing the certificate keystore (used only for https)
      # null value indicates HTTPS is not being used
      certificate-password-file = null

      # Enabled JSON-RPC APIs over the JSON-RPC endpoint
      # Available choices are: eth, web3, net, personal, daedalus
      apis = "eth,web3,net,personal,daedalus"

      # Domains allowed to query RPC endpoint. Use "*" to enable requests from
      # any domain.
      cors-allowed-origins = []

      # Maximum number of blocks for daedalus_getAccountTransactions
      account-transactions-max-blocks = 50000

      net {
        peer-manager-timeout = 5.seconds
      }
    }
  }

  txPool {
    # Maximum number of pending transaction kept in the pool
    tx-pool-size = 1000

    pending-tx-manager-query-timeout = 5.seconds

    transaction-timeout = 2.minutes
  }

  mining {
    # Maximum number of ommers kept in the pool
    ommers-pool-size = 30

    # This determines how many parallel eth_getWork request we can handle, by storing the prepared blocks in a cache,
    # until a corresponding eth_submitWork request is received
    block-cashe-size = 30

    ommer-pool-query-timeout = 5.seconds

    # Extra data to add to mined blocks
    header-extra-data = "mantis"

  }

  blockchain {
    # Frontier block number
    frontier-block-number = "0"

    # Homestead fork block number
    # Doc: https://github.com/ethereum/EIPs/blob/master/EIPS/eip-2.md
    homestead-block-number = "0"

    # EIP-106 fork block number
    # Doc: https://github.com/ethereum/EIPs/issues/106
    eip106-block-number = "1000000000000000000"

    # EIP-150 fork block number
    # Doc: https://github.com/ethereum/EIPs/issues/150
    eip150-block-number = "0"

    # EIP-155 fork block number
    # Doc: https://github.com/ethereum/eips/issues/155
    # 3 000 000 following lead of existing clients implementation to maintain compatibility
    # https://github.com/paritytech/parity/blob/b50fb71dd1d29dfde2a6c7e1830447cf30896c31/ethcore/res/ethereum/classic.json#L15
    eip155-block-number = "3000000"

    # EIP-160 fork block number
    # Doc: https://github.com/ethereum/EIPs/issues/160
    eip160-block-number = "0"

    # EIP-161 fork block number (ETH Only)
    # Doc: https://github.com/ethereum/EIPs/blob/master/EIPS/eip-161.md
    eip161-block-number = "1000000000000000000"

    # EIP-170 max code size (Eth only)
    # Doc: https://github.com/ethereum/EIPs/issues/170
    # null value indicates there's no max code size for the contract code
    max-code-size = null

    # Difficulty bomb pause block number
    # Doc: https://github.com/ethereumproject/ECIPs/blob/master/ECIPs/ECIP-1010.md
    # No longer used as the difficulty of all blocks is 1
    difficulty-bomb-pause-block-number = "1000000000000000000"

    # Difficulty bomb continuation block number
    # Doc: https://github.com/ethereumproject/ECIPs/blob/master/ECIPs/ECIP-1010.md
    # No longer used as the difficulty of all blocks is 1
    difficulty-bomb-continue-block-number = "1000000000000000000"

    # DAO fork configuration (Ethereum HF/Classic split)
    # https://blog.ethereum.org/2016/07/20/hard-fork-completed/
    # No longer used
    # dao {
    # DAO fork block number
    # fork-block-number = "1920000"

    # The hash of the accepted DAO fork block
    #fork-block-hash = "94365e3a8c0b35089c1d1195081fe7489b528a84b22199c916180db8b28ade7f"

    # Extra data to be put in fork block headers
    # block-extra-data = null

    # number of blocks to place extra data after fork
    # block-extra-data-range = 10

    # Address to send funds when draining
    # refund-contract-address = null

    # List of accounts to be drained
    # drain-list = null
    # }

    # Starting nonce a an empty account. Some networks (like Morden) use different values.
    account-start-nonce = "0"

    # The ID of the accepted chain
    chain-id = "0x3d"

    # Custom genesis JSON file path
    # null value indicates using default genesis definition that matches the main network
    # FIXME: Changes made to Ethereum genesis block:
    #   - gasLimit: Previous value 0x1388, increased for easier value transfer
    #   - timestamp: Previous value 0x0, increased to more recent value
    custom-genesis-file = null

    # Monetary policy parameters
    # Doc: https://github.com/ethereumproject/ECIPs/blob/master/ECIPs/ECIP-1017.md
    monetary-policy {
      # Block reward in the first era
      first-era-block-reward = "5000000000000000000"

      # Monetary policy era duration in number of blocks
      era-duration = 5000000

      # Rate at which rewards get reduced in successive eras.
      # Value in range [0.0, 1.0]
      reward-reduction-rate = 0.2
    }

    # if 2 competing blocktree branches are equal in terms of total difficulty and this is set to true, then gas
    # consumed in those branches will be used to resolve the tie
    # this is currently only used in ETS blockchain tests
    gas-tie-breaker = false
  }

  sync {
    # Whether to enable fast-sync
    do-fast-sync = true

    # Interval for updating peers during sync
    peers-scan-interval = 3.seconds

    # Duration for blacklisting a peer. Blacklisting reason include: invalid response from peer, response time-out, etc.
    blacklist-duration = 200.seconds

    # Retry interval when not having enough peers to start fast-sync
    start-retry-interval = 5.seconds

    # Retry interval for resuming fast sync after all connections to peers were lost
    sync-retry-interval = 5.seconds

    # Response time-out from peer during sync. If a peer fails to respond within this limit, it will be blacklisted
    peer-response-timeout = 3.minutes

    # Interval for logging syncing status info
    print-status-interval = 30.seconds

    # How often to dump fast-sync status to disk. If the client is restarted, fast-sync will continue from this point
    persist-state-snapshot-interval = 1.minute

    # Maximum concurrent requests when in fast-sync mode
    max-concurrent-requests = 50

    # Requested number of block headers when syncing from other peers
    block-headers-per-request = 200

    # Requested number of block bodies when syncing from other peers
    block-bodies-per-request = 128

    # Requested number of TX receipts when syncing from other peers
    receipts-per-request = 60

    # Requested number of MPT nodes when syncing from other peers
    nodes-per-request = 200

    # Minimum number of peers required to start fast-sync (by determining the target block)
    min-peers-to-choose-target-block = 2

    # During fast-sync when most up to date block is determined from peers, the actual target block number
    # will be decreased by this value
    target-block-offset = 500

    # How often to query peers for new blocks after the top of the chain has been reached
    check-for-new-block-interval = 10.seconds

    # size of the list that keeps track of peers that are failing to provide us with mpt node
    # we switch them to download only blockchain elements
    fastsync-block-chain-only-peers-pool = 100

    # time between 2 consecutive requests to peer when doing fast sync, this is to prevent flagging us as spammer
    fastsync-throttle = 2 seconds

    # When we receive a block that we don't have a parent for, it means we found a fork. To resolve it, we need to query the
    # same peer for previous blocks, until we find one that we have a parent for. This setting determines the batch size
    # of such query (number of blocks returned in a single query). 12 becaue it is confirmation depth in ethereum
    # Set to a value close to the current block-bodies-per-request, allowing a max partition time of 4 hours:
    #   slot-duration * branch-resolution-batch-size * branch-resolution-max-requests = max-partition-time
    #   15 s * 120 * 4 = 2 hours
    branch-resolution-batch-size = 120

    # number fo block headers batches to process when resolving branches in block chain
    # this limits length of branch in chain that will be resolved while doing regular sync
    # if branch is longer resolution will be aborted because of risk of out of memory error
    # too long branch may also indicate malicious peer, set to 3 to allow a max partition time of 4 hours:
    #   slot-duration * branch-resolution-batch-size * branch-resolution-max-requests = max-partition-time
    #   15 s * 120 * 4 = 2 hours
    branch-resolution-max-requests = 4

    # threshold for storing non-main-chain blocks in queue.
    # if: current_best_block_number - block_number > max-queued-block-number-behind
    # then: the block will not be queued (such already queued blocks will be removed)
    # Set to branch-resolution-batch-size * branch-resolution-max-requests
    max-queued-block-number-behind = 360

    # threshold for storing non-main-chain blocks in queue.
    # if: block_number - current_best_block_number > max-queued-block-number-ahead
    # then: the block will not be queued (such already queued blocks will be removed)
    # Set to branch-resolution-batch-size * branch-resolution-max-requests
    max-queued-block-number-ahead = 360

    # Maxium number of blocks, after which block hash from NewBlockHashes packet is considered ancient
    # and peer sending it is blacklisted
    max-new-block-hash-age = 20

    # Maxium number of hashes processed form NewBlockHashes packet
    max-new-hashes = 64
  }

  pruning {
    # Pruning mode that the application will use.
    #
    # - archive: No pruning is performed
    # - basic: reference count based pruning
    #
    # After changing, please delete previous db before starting the client:
    #
    mode = "basic"

    # The amount of block history kept before pruning
    # Note: if fast-sync clients choose target block offset greater than this value, mantis may not be able to
    # correctly act as a fast-sync server
    history = 1000
  }

  db {
    # IODB database is not currently used
    iodb {
      path = ${mantis.datadir}"/iodb/"
    }

    leveldb {
      # LevelDB data directory
      path = ${mantis.datadir}"/leveldb/"

      # Create DB data directory if it's missing
      create-if-missing = true

      # Should the DB raise an error as soon as it detects an internal corruption
      paranoid-checks = true

      # Force checksum verification of all data that is read from the file system on behalf of a particular read
      verify-checksums = true
    }
  }

  filter {
    # Time at which a filter remains valid
    filter-timeout = 10.minutes

    filter-manager-query-timeout = 3.minutes
  }

  ouroboros {
    # Address where the consesus contrat will be deploy
    consensus-contract-address: "000000000000000000000000000000000000000a"
    # Path where there is the consensus contract binary
    consensus-contract-filepath: "src/main/scala/io/iohk/ethereum/governance/CertificateAuthorityManager"
    # Address selected as initial certificate authority
    initial-certificate-authority: "b15396fbf95ced0bc4a961239ff6350cca2b3203"
    # Percentage of approval that is needed to remove or add a new CA
    consensus-approval-percentage = 66
    # Duration of each slot
    slot-duration = 15.seconds
  }

  ntp {
    ntp-server = "pool.ntp.org"

    update-offset-interval = 10.minutes
  }
}

akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "DEBUG"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  logger-startup-timeout = 30s
  log-dead-letters = off
}
