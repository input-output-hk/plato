package io.iohk.ethereum

import java.io.File
import java.nio.file.Paths

import org.scalatest.{FlatSpec, Matchers}

import scala.io.Source

class BootstrapDownloadSpec extends FlatSpec with Matchers {

  val testURL = getClass.getResource("/downloadtest.zip")
  // generated by md5sum on linux
  val expectedHash = "af354c84c2bd2899fd4d467557191537"

  val tmpFolder = Paths.get(System.getProperty("java.io.tmpdir"))
  val downloadTest = new File(tmpFolder.toFile, "downloadtest")
  val subfolder = new File(downloadTest, "subfolder")
  val subfolderSmallFile = new File(subfolder, "smallfile.subfolder.txt")
  val leveldbFolder = new File(downloadTest, BootstrapDownload.leveldbFolderName)

  val downloadedFile = new File("downloadtestrunning.zip")

  "BootstrapDownload" should " download the file and generate correct hash" in {

    downloadedFile.exists shouldBe false
    val hash = BootstrapDownload.downloadFile(testURL.toString, downloadedFile)
    downloadedFile.exists shouldBe true
    downloadedFile.isFile shouldBe true
    hash shouldBe expectedHash

  }

  it should "unzip the file correctly to the expected folder" in {

    BootstrapDownload.unzip(new File("downloadtestrunning.zip"), tmpFolder)

    downloadTest.exists shouldBe true
    downloadTest.isDirectory shouldBe true

    subfolder.exists shouldBe true
    subfolder.isDirectory shouldBe true

    subfolderSmallFile.exists shouldBe true
    subfolderSmallFile.isFile shouldBe true

    Source.fromFile(subfolderSmallFile).getLines.mkString shouldBe "HelloWorld"

  }

  it should "delete the downloaded file" in {
    downloadedFile.exists shouldBe true
    BootstrapDownload.deleteDownloadedFile(downloadedFile)
    downloadedFile.exists shouldBe false
  }

  it should "refuse to clean out a folder not called 'leveldb'"  in {
    subfolder.listFiles().length shouldBe 1
    assertThrows[java.lang.AssertionError] {
      BootstrapDownload.cleanOutFolder(subfolder.toPath)
    }

  }

  it should "clean out the leveldb folder (remove all files)"  in {
    leveldbFolder.listFiles.length shouldBe 2
    BootstrapDownload.cleanOutFolder(leveldbFolder.toPath)
    leveldbFolder.listFiles.length shouldBe 0
  }
}

