mantis {

  network {

    server-address {
      # Listening interface for Ethereum protocol connections
      # interface = "127.0.0.1"

      # Listening port for Ethereum protocol connections
      # port = 9076
    }

    discovery {
      # Turn discovery of/off
      # discovery-enabled = true

      # Listening port for discovery protocol
      # port = 30303

      # Set of initial nodes
      # bootstrap-nodes = [
      #]
    }

    peer {
      # Retry delay for failed attempt at connecting to a peer
      # connect-retry-delay = 1 minute

      # Maximum number of reconnect attempts after the connection has been initiated.
      # After that, the connection will be dropped until its initiated again (eg. by peer discovery)
      # connect-max-retries = 2

      # Maximum number of peers this node can connect to
      # max-outgoing-peers = 40

      # Maximum number of peers that can connect to this node
      # max-incoming-peers = 5

      # Maximum number of peers that can be connecting to this node
      # max-pending-peers = 5

      # Ethereum network identifier:
      # 1 - mainnet, 2 - morden
      # network-id = 1
    }

    rpc {
      # JSON-RPC mode
      # Available modes are: http, https
      # Choosing https requires creating a certificate and setting up 'certificate-keystore-path' and
      # 'certificate-password-file'
      # See: https://github.com/input-output-hk/mantis/wiki/Creating-self-signed-certificate-for-using-JSON-RPC-with-HTTPS
      mode = "https"

      # Whether to enable JSON-RPC endpoint
      # enabled = true

      # Listening address of JSON-RPC HTTP/HTTPS endpoint
      # interface = "localhost"

      # Listening port of JSON-RPC HTTP/HTTPS endpoint
      # port = 8546

      # Path to the keystore storing the certificates (used only for https)
      # null value indicates HTTPS is not being used
      certificate-keystore-path = "conf/mantis.jks"

      # Type of certificate keystore being used
      # Has to be null or one of the ones listed in:
      #   https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html#KeyStore
      # A null value indicates HTTPS is not being used
      certificate-keystore-type = "jks"

      # File with the password used for accessing the certificate keystore (used only for https)
      # null value indicates HTTPS is not being used
      certificate-password-file = "conf/nopassword"

      # Enabled JSON-RPC APIs over the JSON-RPC endpoint
      # Available choices are: eth, web3, net, personal, daedalus
      # apis = "eth,web3,net,personal,daedalus"

      # Domains allowed to query RPC endpoint. Use "*" to enable requests from
      # any domain.
      # cors-allowed-origins = []
    }
  }
}
